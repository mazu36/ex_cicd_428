version: 2.1

commands:
  destroy_environments:
    steps:
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack \
            --stack-name "prd-${CIRCLE_WORKFLOW_ID:0:7}"
          when: on_fail

jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create a new S3 bucket
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name "prd-${CIRCLE_WORKFLOW_ID:0:7}" \ 
            --parameter-overrides NAME="${CIRCLE_WORKFLOW_ID:0:7}"

      - run:
          name: Copy the files into the bucket
          command: |
            aws s3 sync . s3://"prd-${CIRCLE_WORKFLOW_ID:0:7}" --delete

  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: install tar
          command: |
            yum -y install tar gzip
      - run:
          name: Look for the last PipelineID
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text > ~/pipeline_id.txt
            cat ~/pipeline_id.txt
            ls -l ~/pipeline_id.txt
      - persist_to_workspace:
          root: ~/pipeline_id.txt
          paths: pipeline_id.txt

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Modifying the CloudFront Distroâ€™s Origin Bucket 
          command: |
            aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID}"


  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - attach_workspace:
          at: ~/pipeline_id.txt
      - run:
          name: Retrieve previous PipelineId
          command: |
            PreviousPipelineID=`cat ~/pipeline_id.txt`
      - run:
          name: Remove old bucket
          command: |
            aws s3 rm "s3://${PreviousPipelineID}" --recursive
      - run:
          name: Remove old stack
          command: |
            aws cloudformation delete-stack \
            --stack-name "${PreviousPipelineID}"


workflows:
  my_workflow:
    jobs:
      - get_last_deployment_id
      - create_and_deploy_front_end:
          requires:
            - get_last_deployment_id
      - promote_to_production:
          requires:
            - create_and_deploy_front_end